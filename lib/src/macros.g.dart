import 'libc.dart';

int get ACCESSPERMS => libc.ACCESSPERMS;
int get ALLPERMS => libc.ALLPERMS;
int get AT_EACCESS => libc.AT_EACCESS;
int get AT_FDCWD => libc.AT_FDCWD;
int get AT_REMOVEDIR => libc.AT_REMOVEDIR;
int get AT_SYMLINK_FOLLOW => libc.AT_SYMLINK_FOLLOW;
int get AT_SYMLINK_NOFOLLOW => libc.AT_SYMLINK_NOFOLLOW;
int get BIG_ENDIAN => libc.BIG_ENDIAN;
int get BYTE_ORDER => libc.BYTE_ORDER;
int get DEFFILEMODE => libc.DEFFILEMODE;
int get E2BIG => libc.E2BIG;
int get EACCES => libc.EACCES;
int get EADDRINUSE => libc.EADDRINUSE;
int get EADDRNOTAVAIL => libc.EADDRNOTAVAIL;
int get EADV => libc.EADV;
int get EAFNOSUPPORT => libc.EAFNOSUPPORT;
int get EAGAIN => libc.EAGAIN;
int get EALREADY => libc.EALREADY;
int get EBADE => libc.EBADE;
int get EBADF => libc.EBADF;
int get EBADFD => libc.EBADFD;
int get EBADMSG => libc.EBADMSG;
int get EBADR => libc.EBADR;
int get EBADRQC => libc.EBADRQC;
int get EBADSLT => libc.EBADSLT;
int get EBFONT => libc.EBFONT;
int get EBUSY => libc.EBUSY;
int get ECANCELED => libc.ECANCELED;
int get ECHILD => libc.ECHILD;
int get ECHRNG => libc.ECHRNG;
int get ECOMM => libc.ECOMM;
int get ECONNABORTED => libc.ECONNABORTED;
int get ECONNREFUSED => libc.ECONNREFUSED;
int get ECONNRESET => libc.ECONNRESET;
int get EDEADLK => libc.EDEADLK;
int get EDEADLOCK => libc.EDEADLOCK;
int get EDESTADDRREQ => libc.EDESTADDRREQ;
int get EDOM => libc.EDOM;
int get EDOTDOT => libc.EDOTDOT;
int get EDQUOT => libc.EDQUOT;
int get EEXIST => libc.EEXIST;
int get EFAULT => libc.EFAULT;
int get EFBIG => libc.EFBIG;
int get EHOSTDOWN => libc.EHOSTDOWN;
int get EHOSTUNREACH => libc.EHOSTUNREACH;
int get EHWPOISON => libc.EHWPOISON;
int get EIDRM => libc.EIDRM;
int get EILSEQ => libc.EILSEQ;
int get EINPROGRESS => libc.EINPROGRESS;
int get EINTR => libc.EINTR;
int get EINVAL => libc.EINVAL;
int get EIO => libc.EIO;
int get EISCONN => libc.EISCONN;
int get EISDIR => libc.EISDIR;
int get EISNAM => libc.EISNAM;
int get EKEYEXPIRED => libc.EKEYEXPIRED;
int get EKEYREJECTED => libc.EKEYREJECTED;
int get EKEYREVOKED => libc.EKEYREVOKED;
int get EL2HLT => libc.EL2HLT;
int get EL2NSYNC => libc.EL2NSYNC;
int get EL3HLT => libc.EL3HLT;
int get EL3RST => libc.EL3RST;
int get ELIBACC => libc.ELIBACC;
int get ELIBBAD => libc.ELIBBAD;
int get ELIBEXEC => libc.ELIBEXEC;
int get ELIBMAX => libc.ELIBMAX;
int get ELIBSCN => libc.ELIBSCN;
int get ELNRNG => libc.ELNRNG;
int get ELOOP => libc.ELOOP;
int get EMEDIUMTYPE => libc.EMEDIUMTYPE;
int get EMFILE => libc.EMFILE;
int get EMLINK => libc.EMLINK;
int get EMSGSIZE => libc.EMSGSIZE;
int get EMULTIHOP => libc.EMULTIHOP;
int get ENAMETOOLONG => libc.ENAMETOOLONG;
int get ENAVAIL => libc.ENAVAIL;
int get ENETDOWN => libc.ENETDOWN;
int get ENETRESET => libc.ENETRESET;
int get ENETUNREACH => libc.ENETUNREACH;
int get ENFILE => libc.ENFILE;
int get ENOANO => libc.ENOANO;
int get ENOBUFS => libc.ENOBUFS;
int get ENOCSI => libc.ENOCSI;
int get ENODATA => libc.ENODATA;
int get ENODEV => libc.ENODEV;
int get ENOENT => libc.ENOENT;
int get ENOEXEC => libc.ENOEXEC;
int get ENOKEY => libc.ENOKEY;
int get ENOLCK => libc.ENOLCK;
int get ENOLINK => libc.ENOLINK;
int get ENOMEDIUM => libc.ENOMEDIUM;
int get ENOMEM => libc.ENOMEM;
int get ENOMSG => libc.ENOMSG;
int get ENONET => libc.ENONET;
int get ENOPKG => libc.ENOPKG;
int get ENOPROTOOPT => libc.ENOPROTOOPT;
int get ENOSPC => libc.ENOSPC;
int get ENOSR => libc.ENOSR;
int get ENOSTR => libc.ENOSTR;
int get ENOSYS => libc.ENOSYS;
int get ENOTBLK => libc.ENOTBLK;
int get ENOTCONN => libc.ENOTCONN;
int get ENOTDIR => libc.ENOTDIR;
int get ENOTEMPTY => libc.ENOTEMPTY;
int get ENOTNAM => libc.ENOTNAM;
int get ENOTRECOVERABLE => libc.ENOTRECOVERABLE;
int get ENOTSOCK => libc.ENOTSOCK;
int get ENOTSUP => libc.ENOTSUP;
int get ENOTTY => libc.ENOTTY;
int get ENOTUNIQ => libc.ENOTUNIQ;
int get ENXIO => libc.ENXIO;
int get EOPNOTSUPP => libc.EOPNOTSUPP;
int get EOVERFLOW => libc.EOVERFLOW;
int get EOWNERDEAD => libc.EOWNERDEAD;
int get EPERM => libc.EPERM;
int get EPFNOSUPPORT => libc.EPFNOSUPPORT;
int get EPIPE => libc.EPIPE;
int get EPROTO => libc.EPROTO;
int get EPROTONOSUPPORT => libc.EPROTONOSUPPORT;
int get EPROTOTYPE => libc.EPROTOTYPE;
int get ERANGE => libc.ERANGE;
int get EREMCHG => libc.EREMCHG;
int get EREMOTE => libc.EREMOTE;
int get EREMOTEIO => libc.EREMOTEIO;
int get ERESTART => libc.ERESTART;
int get ERFKILL => libc.ERFKILL;
int get EROFS => libc.EROFS;
int get ESHUTDOWN => libc.ESHUTDOWN;
int get ESOCKTNOSUPPORT => libc.ESOCKTNOSUPPORT;
int get ESPIPE => libc.ESPIPE;
int get ESRCH => libc.ESRCH;
int get ESRMNT => libc.ESRMNT;
int get ESTALE => libc.ESTALE;
int get ESTRPIPE => libc.ESTRPIPE;
int get ETIME => libc.ETIME;
int get ETIMEDOUT => libc.ETIMEDOUT;
int get ETOOMANYREFS => libc.ETOOMANYREFS;
int get ETXTBSY => libc.ETXTBSY;
int get EUCLEAN => libc.EUCLEAN;
int get EUNATCH => libc.EUNATCH;
int get EUSERS => libc.EUSERS;
int get EWOULDBLOCK => libc.EWOULDBLOCK;
int get EXDEV => libc.EXDEV;
int get EXFULL => libc.EXFULL;
int get EXIT_FAILURE => libc.EXIT_FAILURE;
int get EXIT_SUCCESS => libc.EXIT_SUCCESS;
int get FAPPEND => libc.FAPPEND;
int get FASYNC => libc.FASYNC;
int get FD_CLOEXEC => libc.FD_CLOEXEC;
int get FD_SETSIZE => libc.FD_SETSIZE;
int get FFSYNC => libc.FFSYNC;
int get FNDELAY => libc.FNDELAY;
int get FNONBLOCK => libc.FNONBLOCK;
int get F_DUPFD => libc.F_DUPFD;
int get F_DUPFD_CLOEXEC => libc.F_DUPFD_CLOEXEC;
int get F_EXLCK => libc.F_EXLCK;
int get F_GETFD => libc.F_GETFD;
int get F_GETFL => libc.F_GETFL;
int get F_GETLK => libc.F_GETLK;
int get F_GETLK64 => libc.F_GETLK64;
int get F_GETOWN => libc.F_GETOWN;
int get F_LOCK => libc.F_LOCK;
int get F_OK => libc.F_OK;
int get F_RDLCK => libc.F_RDLCK;
int get F_SETFD => libc.F_SETFD;
int get F_SETFL => libc.F_SETFL;
int get F_SETLK => libc.F_SETLK;
int get F_SETLK64 => libc.F_SETLK64;
int get F_SETLKW => libc.F_SETLKW;
int get F_SETLKW64 => libc.F_SETLKW64;
int get F_SETOWN => libc.F_SETOWN;
int get F_SHLCK => libc.F_SHLCK;
int get F_TEST => libc.F_TEST;
int get F_TLOCK => libc.F_TLOCK;
int get F_ULOCK => libc.F_ULOCK;
int get F_UNLCK => libc.F_UNLCK;
int get F_WRLCK => libc.F_WRLCK;
int get LITTLE_ENDIAN => libc.LITTLE_ENDIAN;
int get LOCK_EX => libc.LOCK_EX;
int get LOCK_NB => libc.LOCK_NB;
int get LOCK_SH => libc.LOCK_SH;
int get LOCK_UN => libc.LOCK_UN;
int get L_INCR => libc.L_INCR;
int get L_SET => libc.L_SET;
int get L_XTND => libc.L_XTND;
int get MADV_DODUMP => libc.MADV_DODUMP;
int get MADV_DOFORK => libc.MADV_DOFORK;
int get MADV_DONTDUMP => libc.MADV_DONTDUMP;
int get MADV_DONTFORK => libc.MADV_DONTFORK;
int get MADV_DONTNEED => libc.MADV_DONTNEED;
int get MADV_FREE => libc.MADV_FREE;
int get MADV_HUGEPAGE => libc.MADV_HUGEPAGE;
int get MADV_HWPOISON => libc.MADV_HWPOISON;
int get MADV_KEEPONFORK => libc.MADV_KEEPONFORK;
int get MADV_MERGEABLE => libc.MADV_MERGEABLE;
int get MADV_NOHUGEPAGE => libc.MADV_NOHUGEPAGE;
int get MADV_NORMAL => libc.MADV_NORMAL;
int get MADV_RANDOM => libc.MADV_RANDOM;
int get MADV_REMOVE => libc.MADV_REMOVE;
int get MADV_SEQUENTIAL => libc.MADV_SEQUENTIAL;
int get MADV_UNMERGEABLE => libc.MADV_UNMERGEABLE;
int get MADV_WILLNEED => libc.MADV_WILLNEED;
int get MADV_WIPEONFORK => libc.MADV_WIPEONFORK;
int get MAP_32BIT => libc.MAP_32BIT;
int get MAP_ANON => libc.MAP_ANON;
int get MAP_ANONYMOUS => libc.MAP_ANONYMOUS;
int get MAP_DENYWRITE => libc.MAP_DENYWRITE;
int get MAP_EXECUTABLE => libc.MAP_EXECUTABLE;
int get MAP_FILE => libc.MAP_FILE;
int get MAP_FIXED => libc.MAP_FIXED;
int get MAP_GROWSDOWN => libc.MAP_GROWSDOWN;
int get MAP_HUGETLB => libc.MAP_HUGETLB;
int get MAP_HUGE_MASK => libc.MAP_HUGE_MASK;
int get MAP_HUGE_SHIFT => libc.MAP_HUGE_SHIFT;
int get MAP_LOCKED => libc.MAP_LOCKED;
int get MAP_NONBLOCK => libc.MAP_NONBLOCK;
int get MAP_NORESERVE => libc.MAP_NORESERVE;
int get MAP_POPULATE => libc.MAP_POPULATE;
int get MAP_PRIVATE => libc.MAP_PRIVATE;
int get MAP_SHARED => libc.MAP_SHARED;
int get MAP_STACK => libc.MAP_STACK;
int get MAP_TYPE => libc.MAP_TYPE;
int get MCL_CURRENT => libc.MCL_CURRENT;
int get MCL_FUTURE => libc.MCL_FUTURE;
int get MCL_ONFAULT => libc.MCL_ONFAULT;
int get MS_ASYNC => libc.MS_ASYNC;
int get MS_INVALIDATE => libc.MS_INVALIDATE;
int get MS_SYNC => libc.MS_SYNC;
int get NFDBITS => libc.NFDBITS;
int get NULL => libc.NULL;
int get O_ACCMODE => libc.O_ACCMODE;
int get O_APPEND => libc.O_APPEND;
int get O_ASYNC => libc.O_ASYNC;
int get O_CLOEXEC => libc.O_CLOEXEC;
int get O_CREAT => libc.O_CREAT;
int get O_DIRECTORY => libc.O_DIRECTORY;
int get O_DSYNC => libc.O_DSYNC;
int get O_EXCL => libc.O_EXCL;
int get O_FSYNC => libc.O_FSYNC;
int get O_NDELAY => libc.O_NDELAY;
int get O_NOCTTY => libc.O_NOCTTY;
int get O_NOFOLLOW => libc.O_NOFOLLOW;
int get O_NONBLOCK => libc.O_NONBLOCK;
int get O_RDONLY => libc.O_RDONLY;
int get O_RDWR => libc.O_RDWR;
int get O_RSYNC => libc.O_RSYNC;
int get O_SYNC => libc.O_SYNC;
int get O_TRUNC => libc.O_TRUNC;
int get O_WRONLY => libc.O_WRONLY;
int get PDP_ENDIAN => libc.PDP_ENDIAN;
int get POSIX_FADV_DONTNEED => libc.POSIX_FADV_DONTNEED;
int get POSIX_FADV_NOREUSE => libc.POSIX_FADV_NOREUSE;
int get POSIX_FADV_NORMAL => libc.POSIX_FADV_NORMAL;
int get POSIX_FADV_RANDOM => libc.POSIX_FADV_RANDOM;
int get POSIX_FADV_SEQUENTIAL => libc.POSIX_FADV_SEQUENTIAL;
int get POSIX_FADV_WILLNEED => libc.POSIX_FADV_WILLNEED;
int get POSIX_MADV_DONTNEED => libc.POSIX_MADV_DONTNEED;
int get POSIX_MADV_NORMAL => libc.POSIX_MADV_NORMAL;
int get POSIX_MADV_RANDOM => libc.POSIX_MADV_RANDOM;
int get POSIX_MADV_SEQUENTIAL => libc.POSIX_MADV_SEQUENTIAL;
int get POSIX_MADV_WILLNEED => libc.POSIX_MADV_WILLNEED;
int get PROT_EXEC => libc.PROT_EXEC;
int get PROT_GROWSDOWN => libc.PROT_GROWSDOWN;
int get PROT_GROWSUP => libc.PROT_GROWSUP;
int get PROT_NONE => libc.PROT_NONE;
int get PROT_READ => libc.PROT_READ;
int get PROT_WRITE => libc.PROT_WRITE;
int get RAND_MAX => libc.RAND_MAX;
int get R_OK => libc.R_OK;
int get SEEK_CUR => libc.SEEK_CUR;
int get SEEK_END => libc.SEEK_END;
int get SEEK_SET => libc.SEEK_SET;
int get SI_LOAD_SHIFT => libc.SI_LOAD_SHIFT;
int get STAT_VER => libc.STAT_VER;
int get STDERR_FILENO => libc.STDERR_FILENO;
int get STDIN_FILENO => libc.STDIN_FILENO;
int get STDOUT_FILENO => libc.STDOUT_FILENO;
int get SYS_NMLN => libc.SYS_NMLN;
int get S_BLKSIZE => libc.S_BLKSIZE;
int get S_IEXEC => libc.S_IEXEC;
int get S_IFBLK => libc.S_IFBLK;
int get S_IFCHR => libc.S_IFCHR;
int get S_IFDIR => libc.S_IFDIR;
int get S_IFIFO => libc.S_IFIFO;
int get S_IFLNK => libc.S_IFLNK;
int get S_IFMT => libc.S_IFMT;
int get S_IFREG => libc.S_IFREG;
int get S_IFSOCK => libc.S_IFSOCK;
int get S_IREAD => libc.S_IREAD;
int get S_IRGRP => libc.S_IRGRP;
int get S_IROTH => libc.S_IROTH;
int get S_IRUSR => libc.S_IRUSR;
int get S_IRWXG => libc.S_IRWXG;
int get S_IRWXO => libc.S_IRWXO;
int get S_IRWXU => libc.S_IRWXU;
int get S_ISGID => libc.S_ISGID;
int get S_ISUID => libc.S_ISUID;
int get S_ISVTX => libc.S_ISVTX;
int get S_IWGRP => libc.S_IWGRP;
int get S_IWOTH => libc.S_IWOTH;
int get S_IWRITE => libc.S_IWRITE;
int get S_IWUSR => libc.S_IWUSR;
int get S_IXGRP => libc.S_IXGRP;
int get S_IXOTH => libc.S_IXOTH;
int get S_IXUSR => libc.S_IXUSR;
int get UTIME_NOW => libc.UTIME_NOW;
int get UTIME_OMIT => libc.UTIME_OMIT;
int get UTSNAME_DOMAIN_LENGTH => libc.UTSNAME_DOMAIN_LENGTH;
int get UTSNAME_LENGTH => libc.UTSNAME_LENGTH;
int get UTSNAME_MACHINE_LENGTH => libc.UTSNAME_MACHINE_LENGTH;
int get UTSNAME_NODENAME_LENGTH => libc.UTSNAME_NODENAME_LENGTH;
int get UTSNAME_RELEASE_LENGTH => libc.UTSNAME_RELEASE_LENGTH;
int get UTSNAME_SYSNAME_LENGTH => libc.UTSNAME_SYSNAME_LENGTH;
int get UTSNAME_VERSION_LENGTH => libc.UTSNAME_VERSION_LENGTH;
int get WCONTINUED => libc.WCONTINUED;
int get WEXITED => libc.WEXITED;
int get WNOHANG => libc.WNOHANG;
int get WNOWAIT => libc.WNOWAIT;
int get WSTOPPED => libc.WSTOPPED;
int get WUNTRACED => libc.WUNTRACED;
int get W_OK => libc.W_OK;
int get X_OK => libc.X_OK;
int get ACCESSX_MAX_DESCRIPTORS => libc.ACCESSX_MAX_DESCRIPTORS;
int get ACCESSX_MAX_TABLESIZE => libc.ACCESSX_MAX_TABLESIZE;
int get AT_FDONLY => libc.AT_FDONLY;
int get AT_REALDEV => libc.AT_REALDEV;
int get AT_SYMLINK_NOFOLLOW_ANY => libc.AT_SYMLINK_NOFOLLOW_ANY;
int get BUS_ADRALN => libc.BUS_ADRALN;
int get BUS_ADRERR => libc.BUS_ADRERR;
int get BUS_NOOP => libc.BUS_NOOP;
int get BUS_OBJERR => libc.BUS_OBJERR;
int get CLD_CONTINUED => libc.CLD_CONTINUED;
int get CLD_DUMPED => libc.CLD_DUMPED;
int get CLD_EXITED => libc.CLD_EXITED;
int get CLD_KILLED => libc.CLD_KILLED;
int get CLD_NOOP => libc.CLD_NOOP;
int get CLD_STOPPED => libc.CLD_STOPPED;
int get CLD_TRAPPED => libc.CLD_TRAPPED;
int get CPF_IGNORE_MODE => libc.CPF_IGNORE_MODE;
int get CPF_MASK => libc.CPF_MASK;
int get CPF_OVERWRITE => libc.CPF_OVERWRITE;
int get CPUMON_MAKE_FATAL => libc.CPUMON_MAKE_FATAL;
int get EAUTH => libc.EAUTH;
int get EBADARCH => libc.EBADARCH;
int get EBADEXEC => libc.EBADEXEC;
int get EBADMACHO => libc.EBADMACHO;
int get EBADRPC => libc.EBADRPC;
int get EDEVERR => libc.EDEVERR;
int get EFTYPE => libc.EFTYPE;
int get EF_IS_PURGEABLE => libc.EF_IS_PURGEABLE;
int get EF_IS_SPARSE => libc.EF_IS_SPARSE;
int get EF_IS_SYNC_ROOT => libc.EF_IS_SYNC_ROOT;
int get EF_IS_SYNTHETIC => libc.EF_IS_SYNTHETIC;
int get EF_MAY_SHARE_BLOCKS => libc.EF_MAY_SHARE_BLOCKS;
int get EF_NO_XATTRS => libc.EF_NO_XATTRS;
int get ELAST => libc.ELAST;
int get ENEEDAUTH => libc.ENEEDAUTH;
int get ENOATTR => libc.ENOATTR;
int get ENOPOLICY => libc.ENOPOLICY;
int get EPROCLIM => libc.EPROCLIM;
int get EPROCUNAVAIL => libc.EPROCUNAVAIL;
int get EPROGMISMATCH => libc.EPROGMISMATCH;
int get EPROGUNAVAIL => libc.EPROGUNAVAIL;
int get EPWROFF => libc.EPWROFF;
int get EQFULL => libc.EQFULL;
int get ERPCMISMATCH => libc.ERPCMISMATCH;
int get ESHLIBVERS => libc.ESHLIBVERS;
int get FCNTL_FS_SPECIFIC_BASE => libc.FCNTL_FS_SPECIFIC_BASE;
int get FFDSYNC => libc.FFDSYNC;
int get FILESEC_GUID => libc.FILESEC_GUID;
int get FOOTPRINT_INTERVAL_RESET => libc.FOOTPRINT_INTERVAL_RESET;
int get FPE_FLTDIV => libc.FPE_FLTDIV;
int get FPE_FLTINV => libc.FPE_FLTINV;
int get FPE_FLTOVF => libc.FPE_FLTOVF;
int get FPE_FLTRES => libc.FPE_FLTRES;
int get FPE_FLTSUB => libc.FPE_FLTSUB;
int get FPE_FLTUND => libc.FPE_FLTUND;
int get FPE_INTDIV => libc.FPE_INTDIV;
int get FPE_INTOVF => libc.FPE_INTOVF;
int get FPE_NOOP => libc.FPE_NOOP;
int get FREAD => libc.FREAD;
int get FWRITE => libc.FWRITE;
int get F_ADDFILESIGS => libc.F_ADDFILESIGS;
int get F_ADDFILESIGS_FOR_DYLD_SIM => libc.F_ADDFILESIGS_FOR_DYLD_SIM;
int get F_ADDFILESIGS_INFO => libc.F_ADDFILESIGS_INFO;
int get F_ADDFILESIGS_RETURN => libc.F_ADDFILESIGS_RETURN;
int get F_ADDFILESUPPL => libc.F_ADDFILESUPPL;
int get F_ADDSIGS => libc.F_ADDSIGS;
int get F_ALLOCATEALL => libc.F_ALLOCATEALL;
int get F_ALLOCATECONTIG => libc.F_ALLOCATECONTIG;
int get F_BARRIERFSYNC => libc.F_BARRIERFSYNC;
int get F_CHECK_LV => libc.F_CHECK_LV;
int get F_CHKCLEAN => libc.F_CHKCLEAN;
int get F_FINDSIGS => libc.F_FINDSIGS;
int get F_FLUSH_DATA => libc.F_FLUSH_DATA;
int get F_FREEZE_FS => libc.F_FREEZE_FS;
int get F_FSRESERVED => libc.F_FSRESERVED;
int get F_FULLFSYNC => libc.F_FULLFSYNC;
int get F_GETCODEDIR => libc.F_GETCODEDIR;
int get F_GETLKPID => libc.F_GETLKPID;
int get F_GETNOSIGPIPE => libc.F_GETNOSIGPIPE;
int get F_GETPATH => libc.F_GETPATH;
int get F_GETPATH_MTMINFO => libc.F_GETPATH_MTMINFO;
int get F_GETPATH_NOFIRMLINK => libc.F_GETPATH_NOFIRMLINK;
int get F_GETPROTECTIONCLASS => libc.F_GETPROTECTIONCLASS;
int get F_GETPROTECTIONLEVEL => libc.F_GETPROTECTIONLEVEL;
int get F_GETSIGSINFO => libc.F_GETSIGSINFO;
int get F_GLOBAL_NOCACHE => libc.F_GLOBAL_NOCACHE;
int get F_LOG2PHYS => libc.F_LOG2PHYS;
int get F_LOG2PHYS_EXT => libc.F_LOG2PHYS_EXT;
int get F_NOCACHE => libc.F_NOCACHE;
int get F_NODIRECT => libc.F_NODIRECT;
int get F_PATHPKG_CHECK => libc.F_PATHPKG_CHECK;
int get F_PEOFPOSMODE => libc.F_PEOFPOSMODE;
int get F_PREALLOCATE => libc.F_PREALLOCATE;
int get F_PUNCHHOLE => libc.F_PUNCHHOLE;
int get F_RDADVISE => libc.F_RDADVISE;
int get F_RDAHEAD => libc.F_RDAHEAD;
int get F_SETBACKINGSTORE => libc.F_SETBACKINGSTORE;
int get F_SETLKWTIMEOUT => libc.F_SETLKWTIMEOUT;
int get F_SETNOSIGPIPE => libc.F_SETNOSIGPIPE;
int get F_SETPROTECTIONCLASS => libc.F_SETPROTECTIONCLASS;
int get F_SETSIZE => libc.F_SETSIZE;
int get F_SINGLE_WRITER => libc.F_SINGLE_WRITER;
int get F_SPECULATIVE_READ => libc.F_SPECULATIVE_READ;
int get F_THAW_FS => libc.F_THAW_FS;
int get F_TRANSCODEKEY => libc.F_TRANSCODEKEY;
int get F_TRIM_ACTIVE_FILE => libc.F_TRIM_ACTIVE_FILE;
int get F_VOLPOSMODE => libc.F_VOLPOSMODE;
int get GETSIGSINFO_PLATFORM_BINARY => libc.GETSIGSINFO_PLATFORM_BINARY;
int get ILL_BADSTK => libc.ILL_BADSTK;
int get ILL_COPROC => libc.ILL_COPROC;
int get ILL_ILLADR => libc.ILL_ILLADR;
int get ILL_ILLOPC => libc.ILL_ILLOPC;
int get ILL_ILLOPN => libc.ILL_ILLOPN;
int get ILL_ILLTRP => libc.ILL_ILLTRP;
int get ILL_NOOP => libc.ILL_NOOP;
int get ILL_PRVOPC => libc.ILL_PRVOPC;
int get ILL_PRVREG => libc.ILL_PRVREG;
int get INT16_MAX => libc.INT16_MAX;
int get INT16_MIN => libc.INT16_MIN;
int get INT32_MAX => libc.INT32_MAX;
int get INT32_MIN => libc.INT32_MIN;
int get INT64_MAX => libc.INT64_MAX;
int get INT64_MIN => libc.INT64_MIN;
int get INT8_MAX => libc.INT8_MAX;
int get INT8_MIN => libc.INT8_MIN;
int get INTMAX_MAX => libc.INTMAX_MAX;
int get INTMAX_MIN => libc.INTMAX_MIN;
int get INTPTR_MAX => libc.INTPTR_MAX;
int get INTPTR_MIN => libc.INTPTR_MIN;
int get INT_FAST16_MAX => libc.INT_FAST16_MAX;
int get INT_FAST16_MIN => libc.INT_FAST16_MIN;
int get INT_FAST32_MAX => libc.INT_FAST32_MAX;
int get INT_FAST32_MIN => libc.INT_FAST32_MIN;
int get INT_FAST64_MAX => libc.INT_FAST64_MAX;
int get INT_FAST64_MIN => libc.INT_FAST64_MIN;
int get INT_FAST8_MAX => libc.INT_FAST8_MAX;
int get INT_FAST8_MIN => libc.INT_FAST8_MIN;
int get INT_LEAST16_MAX => libc.INT_LEAST16_MAX;
int get INT_LEAST16_MIN => libc.INT_LEAST16_MIN;
int get INT_LEAST32_MAX => libc.INT_LEAST32_MAX;
int get INT_LEAST32_MIN => libc.INT_LEAST32_MIN;
int get INT_LEAST64_MAX => libc.INT_LEAST64_MAX;
int get INT_LEAST64_MIN => libc.INT_LEAST64_MIN;
int get INT_LEAST8_MAX => libc.INT_LEAST8_MAX;
int get INT_LEAST8_MIN => libc.INT_LEAST8_MIN;
int get IOPOL_APPLICATION => libc.IOPOL_APPLICATION;
int get IOPOL_ATIME_UPDATES_DEFAULT => libc.IOPOL_ATIME_UPDATES_DEFAULT;
int get IOPOL_ATIME_UPDATES_OFF => libc.IOPOL_ATIME_UPDATES_OFF;
int get IOPOL_DEFAULT => libc.IOPOL_DEFAULT;
int get IOPOL_IMPORTANT => libc.IOPOL_IMPORTANT;
int get IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT =>
    libc.IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT;
int get IOPOL_MATERIALIZE_DATALESS_FILES_OFF =>
    libc.IOPOL_MATERIALIZE_DATALESS_FILES_OFF;
int get IOPOL_MATERIALIZE_DATALESS_FILES_ON =>
    libc.IOPOL_MATERIALIZE_DATALESS_FILES_ON;
int get IOPOL_NORMAL => libc.IOPOL_NORMAL;
int get IOPOL_PASSIVE => libc.IOPOL_PASSIVE;
int get IOPOL_SCOPE_DARWIN_BG => libc.IOPOL_SCOPE_DARWIN_BG;
int get IOPOL_SCOPE_PROCESS => libc.IOPOL_SCOPE_PROCESS;
int get IOPOL_SCOPE_THREAD => libc.IOPOL_SCOPE_THREAD;
int get IOPOL_STANDARD => libc.IOPOL_STANDARD;
int get IOPOL_THROTTLE => libc.IOPOL_THROTTLE;
int get IOPOL_TYPE_DISK => libc.IOPOL_TYPE_DISK;
int get IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES =>
    libc.IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES;
int get IOPOL_TYPE_VFS_ATIME_UPDATES => libc.IOPOL_TYPE_VFS_ATIME_UPDATES;
int get IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION =>
    libc.IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION;
int get IOPOL_TYPE_VFS_IGNORE_PERMISSIONS =>
    libc.IOPOL_TYPE_VFS_IGNORE_PERMISSIONS;
int get IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES =>
    libc.IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES;
int get IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE =>
    libc.IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE;
int get IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME =>
    libc.IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME;
int get IOPOL_TYPE_VFS_TRIGGER_RESOLVE => libc.IOPOL_TYPE_VFS_TRIGGER_RESOLVE;
int get IOPOL_UTILITY => libc.IOPOL_UTILITY;
int get IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF =>
    libc.IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF;
int get IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON =>
    libc.IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON;
int get IOPOL_VFS_CONTENT_PROTECTION_DEFAULT =>
    libc.IOPOL_VFS_CONTENT_PROTECTION_DEFAULT;
int get IOPOL_VFS_CONTENT_PROTECTION_IGNORE =>
    libc.IOPOL_VFS_CONTENT_PROTECTION_IGNORE;
int get IOPOL_VFS_IGNORE_PERMISSIONS_OFF =>
    libc.IOPOL_VFS_IGNORE_PERMISSIONS_OFF;
int get IOPOL_VFS_IGNORE_PERMISSIONS_ON => libc.IOPOL_VFS_IGNORE_PERMISSIONS_ON;
int get IOPOL_VFS_SKIP_MTIME_UPDATE_OFF => libc.IOPOL_VFS_SKIP_MTIME_UPDATE_OFF;
int get IOPOL_VFS_SKIP_MTIME_UPDATE_ON => libc.IOPOL_VFS_SKIP_MTIME_UPDATE_ON;
int get IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME =>
    libc.IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME;
int get IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT =>
    libc.IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT;
int get IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT =>
    libc.IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT;
int get IOPOL_VFS_TRIGGER_RESOLVE_OFF => libc.IOPOL_VFS_TRIGGER_RESOLVE_OFF;
int get MAC_OS_VERSION_11_0 => libc.MAC_OS_VERSION_11_0;
int get MAC_OS_VERSION_12_0 => libc.MAC_OS_VERSION_12_0;
int get MAC_OS_X_VERSION_10_0 => libc.MAC_OS_X_VERSION_10_0;
int get MAC_OS_X_VERSION_10_1 => libc.MAC_OS_X_VERSION_10_1;
int get MAC_OS_X_VERSION_10_10 => libc.MAC_OS_X_VERSION_10_10;
int get MAC_OS_X_VERSION_10_10_2 => libc.MAC_OS_X_VERSION_10_10_2;
int get MAC_OS_X_VERSION_10_10_3 => libc.MAC_OS_X_VERSION_10_10_3;
int get MAC_OS_X_VERSION_10_11 => libc.MAC_OS_X_VERSION_10_11;
int get MAC_OS_X_VERSION_10_11_2 => libc.MAC_OS_X_VERSION_10_11_2;
int get MAC_OS_X_VERSION_10_11_3 => libc.MAC_OS_X_VERSION_10_11_3;
int get MAC_OS_X_VERSION_10_11_4 => libc.MAC_OS_X_VERSION_10_11_4;
int get MAC_OS_X_VERSION_10_12 => libc.MAC_OS_X_VERSION_10_12;
int get MAC_OS_X_VERSION_10_12_1 => libc.MAC_OS_X_VERSION_10_12_1;
int get MAC_OS_X_VERSION_10_12_2 => libc.MAC_OS_X_VERSION_10_12_2;
int get MAC_OS_X_VERSION_10_12_4 => libc.MAC_OS_X_VERSION_10_12_4;
int get MAC_OS_X_VERSION_10_13 => libc.MAC_OS_X_VERSION_10_13;
int get MAC_OS_X_VERSION_10_13_1 => libc.MAC_OS_X_VERSION_10_13_1;
int get MAC_OS_X_VERSION_10_13_2 => libc.MAC_OS_X_VERSION_10_13_2;
int get MAC_OS_X_VERSION_10_13_4 => libc.MAC_OS_X_VERSION_10_13_4;
int get MAC_OS_X_VERSION_10_14 => libc.MAC_OS_X_VERSION_10_14;
int get MAC_OS_X_VERSION_10_14_1 => libc.MAC_OS_X_VERSION_10_14_1;
int get MAC_OS_X_VERSION_10_14_4 => libc.MAC_OS_X_VERSION_10_14_4;
int get MAC_OS_X_VERSION_10_14_6 => libc.MAC_OS_X_VERSION_10_14_6;
int get MAC_OS_X_VERSION_10_15 => libc.MAC_OS_X_VERSION_10_15;
int get MAC_OS_X_VERSION_10_15_1 => libc.MAC_OS_X_VERSION_10_15_1;
int get MAC_OS_X_VERSION_10_16 => libc.MAC_OS_X_VERSION_10_16;
int get MAC_OS_X_VERSION_10_2 => libc.MAC_OS_X_VERSION_10_2;
int get MAC_OS_X_VERSION_10_3 => libc.MAC_OS_X_VERSION_10_3;
int get MAC_OS_X_VERSION_10_4 => libc.MAC_OS_X_VERSION_10_4;
int get MAC_OS_X_VERSION_10_5 => libc.MAC_OS_X_VERSION_10_5;
int get MAC_OS_X_VERSION_10_6 => libc.MAC_OS_X_VERSION_10_6;
int get MAC_OS_X_VERSION_10_7 => libc.MAC_OS_X_VERSION_10_7;
int get MAC_OS_X_VERSION_10_8 => libc.MAC_OS_X_VERSION_10_8;
int get MAC_OS_X_VERSION_10_9 => libc.MAC_OS_X_VERSION_10_9;
int get MADV_CAN_REUSE => libc.MADV_CAN_REUSE;
int get MADV_FREE_REUSABLE => libc.MADV_FREE_REUSABLE;
int get MADV_FREE_REUSE => libc.MADV_FREE_REUSE;
int get MADV_PAGEOUT => libc.MADV_PAGEOUT;
int get MADV_ZERO_WIRED_PAGES => libc.MADV_ZERO_WIRED_PAGES;
int get MAP_COPY => libc.MAP_COPY;
int get MAP_HASSEMAPHORE => libc.MAP_HASSEMAPHORE;
int get MAP_JIT => libc.MAP_JIT;
int get MAP_NOCACHE => libc.MAP_NOCACHE;
int get MAP_NOEXTEND => libc.MAP_NOEXTEND;
int get MAP_RENAME => libc.MAP_RENAME;
int get MAP_RESERVED0080 => libc.MAP_RESERVED0080;
int get MAP_RESILIENT_CODESIGN => libc.MAP_RESILIENT_CODESIGN;
int get MAP_RESILIENT_MEDIA => libc.MAP_RESILIENT_MEDIA;
int get MAP_TRANSLATED_ALLOW_EXECUTE => libc.MAP_TRANSLATED_ALLOW_EXECUTE;
int get MAP_UNIX03 => libc.MAP_UNIX03;
int get MINCORE_ANONYMOUS => libc.MINCORE_ANONYMOUS;
int get MINCORE_COPIED => libc.MINCORE_COPIED;
int get MINCORE_INCORE => libc.MINCORE_INCORE;
int get MINCORE_MODIFIED => libc.MINCORE_MODIFIED;
int get MINCORE_MODIFIED_OTHER => libc.MINCORE_MODIFIED_OTHER;
int get MINCORE_PAGED_OUT => libc.MINCORE_PAGED_OUT;
int get MINCORE_REFERENCED => libc.MINCORE_REFERENCED;
int get MINCORE_REFERENCED_OTHER => libc.MINCORE_REFERENCED_OTHER;
int get MINSIGSTKSZ => libc.MINSIGSTKSZ;
int get MS_DEACTIVATE => libc.MS_DEACTIVATE;
int get MS_KILLPAGES => libc.MS_KILLPAGES;
int get NSIG => libc.NSIG;
int get O_ALERT => libc.O_ALERT;
int get O_DP_GETRAWENCRYPTED => libc.O_DP_GETRAWENCRYPTED;
int get O_DP_GETRAWUNENCRYPTED => libc.O_DP_GETRAWUNENCRYPTED;
int get O_EVTONLY => libc.O_EVTONLY;
int get O_EXLOCK => libc.O_EXLOCK;
int get O_NOFOLLOW_ANY => libc.O_NOFOLLOW_ANY;
int get O_POPUP => libc.O_POPUP;
int get O_SHLOCK => libc.O_SHLOCK;
int get O_SYMLINK => libc.O_SYMLINK;
int get POLL_ERR => libc.POLL_ERR;
int get POLL_HUP => libc.POLL_HUP;
int get POLL_IN => libc.POLL_IN;
int get POLL_MSG => libc.POLL_MSG;
int get POLL_OUT => libc.POLL_OUT;
int get POLL_PRI => libc.POLL_PRI;
int get PRIO_DARWIN_BG => libc.PRIO_DARWIN_BG;
int get PRIO_DARWIN_NONUI => libc.PRIO_DARWIN_NONUI;
int get PRIO_DARWIN_PROCESS => libc.PRIO_DARWIN_PROCESS;
int get PRIO_DARWIN_THREAD => libc.PRIO_DARWIN_THREAD;
int get PRIO_MAX => libc.PRIO_MAX;
int get PRIO_MIN => libc.PRIO_MIN;
int get PRIO_PGRP => libc.PRIO_PGRP;
int get PRIO_PROCESS => libc.PRIO_PROCESS;
int get PRIO_USER => libc.PRIO_USER;
int get PTRDIFF_MAX => libc.PTRDIFF_MAX;
int get PTRDIFF_MIN => libc.PTRDIFF_MIN;
int get RLIMIT_AS => libc.RLIMIT_AS;
int get RLIMIT_CORE => libc.RLIMIT_CORE;
int get RLIMIT_CPU => libc.RLIMIT_CPU;
int get RLIMIT_CPU_USAGE_MONITOR => libc.RLIMIT_CPU_USAGE_MONITOR;
int get RLIMIT_DATA => libc.RLIMIT_DATA;
int get RLIMIT_FOOTPRINT_INTERVAL => libc.RLIMIT_FOOTPRINT_INTERVAL;
int get RLIMIT_FSIZE => libc.RLIMIT_FSIZE;
int get RLIMIT_MEMLOCK => libc.RLIMIT_MEMLOCK;
int get RLIMIT_NOFILE => libc.RLIMIT_NOFILE;
int get RLIMIT_NPROC => libc.RLIMIT_NPROC;
int get RLIMIT_RSS => libc.RLIMIT_RSS;
int get RLIMIT_STACK => libc.RLIMIT_STACK;
int get RLIMIT_THREAD_CPULIMITS => libc.RLIMIT_THREAD_CPULIMITS;
int get RLIMIT_WAKEUPS_MONITOR => libc.RLIMIT_WAKEUPS_MONITOR;
int get RLIM_INFINITY => libc.RLIM_INFINITY;
int get RLIM_NLIMITS => libc.RLIM_NLIMITS;
int get RLIM_SAVED_CUR => libc.RLIM_SAVED_CUR;
int get RLIM_SAVED_MAX => libc.RLIM_SAVED_MAX;
int get RSIZE_MAX => libc.RSIZE_MAX;
int get RUSAGE_CHILDREN => libc.RUSAGE_CHILDREN;
int get RUSAGE_INFO_CURRENT => libc.RUSAGE_INFO_CURRENT;
int get RUSAGE_INFO_V0 => libc.RUSAGE_INFO_V0;
int get RUSAGE_INFO_V1 => libc.RUSAGE_INFO_V1;
int get RUSAGE_INFO_V2 => libc.RUSAGE_INFO_V2;
int get RUSAGE_INFO_V3 => libc.RUSAGE_INFO_V3;
int get RUSAGE_INFO_V4 => libc.RUSAGE_INFO_V4;
int get RUSAGE_INFO_V5 => libc.RUSAGE_INFO_V5;
int get RUSAGE_SELF => libc.RUSAGE_SELF;
int get RU_PROC_RUNS_RESLIDE => libc.RU_PROC_RUNS_RESLIDE;
int get SA_64REGSET => libc.SA_64REGSET;
int get SA_NOCLDSTOP => libc.SA_NOCLDSTOP;
int get SA_NOCLDWAIT => libc.SA_NOCLDWAIT;
int get SA_NODEFER => libc.SA_NODEFER;
int get SA_ONSTACK => libc.SA_ONSTACK;
int get SA_RESETHAND => libc.SA_RESETHAND;
int get SA_RESTART => libc.SA_RESTART;
int get SA_SIGINFO => libc.SA_SIGINFO;
int get SA_USERSPACE_MASK => libc.SA_USERSPACE_MASK;
int get SA_USERTRAMP => libc.SA_USERTRAMP;
int get SEEK_DATA => libc.SEEK_DATA;
int get SEEK_HOLE => libc.SEEK_HOLE;
int get SEGV_ACCERR => libc.SEGV_ACCERR;
int get SEGV_MAPERR => libc.SEGV_MAPERR;
int get SEGV_NOOP => libc.SEGV_NOOP;
int get SF_APPEND => libc.SF_APPEND;
int get SF_ARCHIVED => libc.SF_ARCHIVED;
int get SF_DATALESS => libc.SF_DATALESS;
int get SF_FIRMLINK => libc.SF_FIRMLINK;
int get SF_IMMUTABLE => libc.SF_IMMUTABLE;
int get SF_NOUNLINK => libc.SF_NOUNLINK;
int get SF_RESTRICTED => libc.SF_RESTRICTED;
int get SF_SETTABLE => libc.SF_SETTABLE;
int get SF_SUPPORTED => libc.SF_SUPPORTED;
int get SF_SYNTHETIC => libc.SF_SYNTHETIC;
int get SIGABRT => libc.SIGABRT;
int get SIGALRM => libc.SIGALRM;
int get SIGBUS => libc.SIGBUS;
int get SIGCHLD => libc.SIGCHLD;
int get SIGCONT => libc.SIGCONT;
int get SIGEMT => libc.SIGEMT;
int get SIGEV_NONE => libc.SIGEV_NONE;
int get SIGEV_SIGNAL => libc.SIGEV_SIGNAL;
int get SIGEV_THREAD => libc.SIGEV_THREAD;
int get SIGFPE => libc.SIGFPE;
int get SIGHUP => libc.SIGHUP;
int get SIGILL => libc.SIGILL;
int get SIGINFO => libc.SIGINFO;
int get SIGINT => libc.SIGINT;
int get SIGIO => libc.SIGIO;
int get SIGIOT => libc.SIGIOT;
int get SIGKILL => libc.SIGKILL;
int get SIGPIPE => libc.SIGPIPE;
int get SIGPROF => libc.SIGPROF;
int get SIGQUIT => libc.SIGQUIT;
int get SIGSEGV => libc.SIGSEGV;
int get SIGSTKSZ => libc.SIGSTKSZ;
int get SIGSTOP => libc.SIGSTOP;
int get SIGSYS => libc.SIGSYS;
int get SIGTERM => libc.SIGTERM;
int get SIGTRAP => libc.SIGTRAP;
int get SIGTSTP => libc.SIGTSTP;
int get SIGTTIN => libc.SIGTTIN;
int get SIGTTOU => libc.SIGTTOU;
int get SIGURG => libc.SIGURG;
int get SIGUSR1 => libc.SIGUSR1;
int get SIGUSR2 => libc.SIGUSR2;
int get SIGVTALRM => libc.SIGVTALRM;
int get SIGWINCH => libc.SIGWINCH;
int get SIGXCPU => libc.SIGXCPU;
int get SIGXFSZ => libc.SIGXFSZ;
int get SIG_ATOMIC_MAX => libc.SIG_ATOMIC_MAX;
int get SIG_ATOMIC_MIN => libc.SIG_ATOMIC_MIN;
int get SIG_BLOCK => libc.SIG_BLOCK;
int get SIG_SETMASK => libc.SIG_SETMASK;
int get SIG_UNBLOCK => libc.SIG_UNBLOCK;
int get SIZE_MAX => libc.SIZE_MAX;
int get SI_ASYNCIO => libc.SI_ASYNCIO;
int get SI_MESGQ => libc.SI_MESGQ;
int get SI_QUEUE => libc.SI_QUEUE;
int get SI_TIMER => libc.SI_TIMER;
int get SI_USER => libc.SI_USER;
int get SS_DISABLE => libc.SS_DISABLE;
int get SS_ONSTACK => libc.SS_ONSTACK;
int get SV_INTERRUPT => libc.SV_INTERRUPT;
int get SV_NOCLDSTOP => libc.SV_NOCLDSTOP;
int get SV_NODEFER => libc.SV_NODEFER;
int get SV_ONSTACK => libc.SV_ONSTACK;
int get SV_RESETHAND => libc.SV_RESETHAND;
int get SV_SIGINFO => libc.SV_SIGINFO;
int get SYNC_VOLUME_FULLSYNC => libc.SYNC_VOLUME_FULLSYNC;
int get SYNC_VOLUME_WAIT => libc.SYNC_VOLUME_WAIT;
int get SYS_NAMELEN => libc.SYS_NAMELEN;
int get S_IFWHT => libc.S_IFWHT;
int get S_ISTXT => libc.S_ISTXT;
int get TRAP_BRKPT => libc.TRAP_BRKPT;
int get TRAP_TRACE => libc.TRAP_TRACE;
int get UF_APPEND => libc.UF_APPEND;
int get UF_COMPRESSED => libc.UF_COMPRESSED;
int get UF_DATAVAULT => libc.UF_DATAVAULT;
int get UF_HIDDEN => libc.UF_HIDDEN;
int get UF_IMMUTABLE => libc.UF_IMMUTABLE;
int get UF_NODUMP => libc.UF_NODUMP;
int get UF_OPAQUE => libc.UF_OPAQUE;
int get UF_SETTABLE => libc.UF_SETTABLE;
int get UF_TRACKED => libc.UF_TRACKED;
int get UINT16_MAX => libc.UINT16_MAX;
int get UINT32_MAX => libc.UINT32_MAX;
int get UINT64_MAX => libc.UINT64_MAX;
int get UINT8_MAX => libc.UINT8_MAX;
int get UINTMAX_MAX => libc.UINTMAX_MAX;
int get UINTPTR_MAX => libc.UINTPTR_MAX;
int get UINT_FAST16_MAX => libc.UINT_FAST16_MAX;
int get UINT_FAST32_MAX => libc.UINT_FAST32_MAX;
int get UINT_FAST64_MAX => libc.UINT_FAST64_MAX;
int get UINT_FAST8_MAX => libc.UINT_FAST8_MAX;
int get UINT_LEAST16_MAX => libc.UINT_LEAST16_MAX;
int get UINT_LEAST32_MAX => libc.UINT_LEAST32_MAX;
int get UINT_LEAST64_MAX => libc.UINT_LEAST64_MAX;
int get UINT_LEAST8_MAX => libc.UINT_LEAST8_MAX;
int get USER_ADDR_NULL => libc.USER_ADDR_NULL;
int get USER_FSIGNATURES_CDHASH_LEN => libc.USER_FSIGNATURES_CDHASH_LEN;
int get WAIT_ANY => libc.WAIT_ANY;
int get WAIT_MYPGRP => libc.WAIT_MYPGRP;
int get WAKEMON_DISABLE => libc.WAKEMON_DISABLE;
int get WAKEMON_ENABLE => libc.WAKEMON_ENABLE;
int get WAKEMON_GET_PARAMS => libc.WAKEMON_GET_PARAMS;
int get WAKEMON_MAKE_FATAL => libc.WAKEMON_MAKE_FATAL;
int get WAKEMON_SET_DEFAULTS => libc.WAKEMON_SET_DEFAULTS;
int get WCHAR_MAX => libc.WCHAR_MAX;
int get WCHAR_MIN => libc.WCHAR_MIN;
int get WCOREFLAG => libc.WCOREFLAG;
int get WINT_MAX => libc.WINT_MAX;
int get WINT_MIN => libc.WINT_MIN;
mixin MacroMixin {
  int get ACCESSPERMS;
  int get ALLPERMS;
  int get AT_EACCESS;
  int get AT_FDCWD;
  int get AT_REMOVEDIR;
  int get AT_SYMLINK_FOLLOW;
  int get AT_SYMLINK_NOFOLLOW;
  int get BIG_ENDIAN;
  int get BYTE_ORDER;
  int get DEFFILEMODE;
  int get E2BIG;
  int get EACCES;
  int get EADDRINUSE;
  int get EADDRNOTAVAIL;
  int get EADV;
  int get EAFNOSUPPORT;
  int get EAGAIN;
  int get EALREADY;
  int get EBADE;
  int get EBADF;
  int get EBADFD;
  int get EBADMSG;
  int get EBADR;
  int get EBADRQC;
  int get EBADSLT;
  int get EBFONT;
  int get EBUSY;
  int get ECANCELED;
  int get ECHILD;
  int get ECHRNG;
  int get ECOMM;
  int get ECONNABORTED;
  int get ECONNREFUSED;
  int get ECONNRESET;
  int get EDEADLK;
  int get EDEADLOCK;
  int get EDESTADDRREQ;
  int get EDOM;
  int get EDOTDOT;
  int get EDQUOT;
  int get EEXIST;
  int get EFAULT;
  int get EFBIG;
  int get EHOSTDOWN;
  int get EHOSTUNREACH;
  int get EHWPOISON;
  int get EIDRM;
  int get EILSEQ;
  int get EINPROGRESS;
  int get EINTR;
  int get EINVAL;
  int get EIO;
  int get EISCONN;
  int get EISDIR;
  int get EISNAM;
  int get EKEYEXPIRED;
  int get EKEYREJECTED;
  int get EKEYREVOKED;
  int get EL2HLT;
  int get EL2NSYNC;
  int get EL3HLT;
  int get EL3RST;
  int get ELIBACC;
  int get ELIBBAD;
  int get ELIBEXEC;
  int get ELIBMAX;
  int get ELIBSCN;
  int get ELNRNG;
  int get ELOOP;
  int get EMEDIUMTYPE;
  int get EMFILE;
  int get EMLINK;
  int get EMSGSIZE;
  int get EMULTIHOP;
  int get ENAMETOOLONG;
  int get ENAVAIL;
  int get ENETDOWN;
  int get ENETRESET;
  int get ENETUNREACH;
  int get ENFILE;
  int get ENOANO;
  int get ENOBUFS;
  int get ENOCSI;
  int get ENODATA;
  int get ENODEV;
  int get ENOENT;
  int get ENOEXEC;
  int get ENOKEY;
  int get ENOLCK;
  int get ENOLINK;
  int get ENOMEDIUM;
  int get ENOMEM;
  int get ENOMSG;
  int get ENONET;
  int get ENOPKG;
  int get ENOPROTOOPT;
  int get ENOSPC;
  int get ENOSR;
  int get ENOSTR;
  int get ENOSYS;
  int get ENOTBLK;
  int get ENOTCONN;
  int get ENOTDIR;
  int get ENOTEMPTY;
  int get ENOTNAM;
  int get ENOTRECOVERABLE;
  int get ENOTSOCK;
  int get ENOTSUP;
  int get ENOTTY;
  int get ENOTUNIQ;
  int get ENXIO;
  int get EOPNOTSUPP;
  int get EOVERFLOW;
  int get EOWNERDEAD;
  int get EPERM;
  int get EPFNOSUPPORT;
  int get EPIPE;
  int get EPROTO;
  int get EPROTONOSUPPORT;
  int get EPROTOTYPE;
  int get ERANGE;
  int get EREMCHG;
  int get EREMOTE;
  int get EREMOTEIO;
  int get ERESTART;
  int get ERFKILL;
  int get EROFS;
  int get ESHUTDOWN;
  int get ESOCKTNOSUPPORT;
  int get ESPIPE;
  int get ESRCH;
  int get ESRMNT;
  int get ESTALE;
  int get ESTRPIPE;
  int get ETIME;
  int get ETIMEDOUT;
  int get ETOOMANYREFS;
  int get ETXTBSY;
  int get EUCLEAN;
  int get EUNATCH;
  int get EUSERS;
  int get EWOULDBLOCK;
  int get EXDEV;
  int get EXFULL;
  int get EXIT_FAILURE;
  int get EXIT_SUCCESS;
  int get FAPPEND;
  int get FASYNC;
  int get FD_CLOEXEC;
  int get FD_SETSIZE;
  int get FFSYNC;
  int get FNDELAY;
  int get FNONBLOCK;
  int get F_DUPFD;
  int get F_DUPFD_CLOEXEC;
  int get F_EXLCK;
  int get F_GETFD;
  int get F_GETFL;
  int get F_GETLK;
  int get F_GETLK64;
  int get F_GETOWN;
  int get F_LOCK;
  int get F_OK;
  int get F_RDLCK;
  int get F_SETFD;
  int get F_SETFL;
  int get F_SETLK;
  int get F_SETLK64;
  int get F_SETLKW;
  int get F_SETLKW64;
  int get F_SETOWN;
  int get F_SHLCK;
  int get F_TEST;
  int get F_TLOCK;
  int get F_ULOCK;
  int get F_UNLCK;
  int get F_WRLCK;
  int get LITTLE_ENDIAN;
  int get LOCK_EX;
  int get LOCK_NB;
  int get LOCK_SH;
  int get LOCK_UN;
  int get L_INCR;
  int get L_SET;
  int get L_XTND;
  int get MADV_DODUMP;
  int get MADV_DOFORK;
  int get MADV_DONTDUMP;
  int get MADV_DONTFORK;
  int get MADV_DONTNEED;
  int get MADV_FREE;
  int get MADV_HUGEPAGE;
  int get MADV_HWPOISON;
  int get MADV_KEEPONFORK;
  int get MADV_MERGEABLE;
  int get MADV_NOHUGEPAGE;
  int get MADV_NORMAL;
  int get MADV_RANDOM;
  int get MADV_REMOVE;
  int get MADV_SEQUENTIAL;
  int get MADV_UNMERGEABLE;
  int get MADV_WILLNEED;
  int get MADV_WIPEONFORK;
  int get MAP_32BIT;
  int get MAP_ANON;
  int get MAP_ANONYMOUS;
  int get MAP_DENYWRITE;
  int get MAP_EXECUTABLE;
  int get MAP_FILE;
  int get MAP_FIXED;
  int get MAP_GROWSDOWN;
  int get MAP_HUGETLB;
  int get MAP_HUGE_MASK;
  int get MAP_HUGE_SHIFT;
  int get MAP_LOCKED;
  int get MAP_NONBLOCK;
  int get MAP_NORESERVE;
  int get MAP_POPULATE;
  int get MAP_PRIVATE;
  int get MAP_SHARED;
  int get MAP_STACK;
  int get MAP_TYPE;
  int get MCL_CURRENT;
  int get MCL_FUTURE;
  int get MCL_ONFAULT;
  int get MS_ASYNC;
  int get MS_INVALIDATE;
  int get MS_SYNC;
  int get NFDBITS;
  int get NULL;
  int get O_ACCMODE;
  int get O_APPEND;
  int get O_ASYNC;
  int get O_CLOEXEC;
  int get O_CREAT;
  int get O_DIRECTORY;
  int get O_DSYNC;
  int get O_EXCL;
  int get O_FSYNC;
  int get O_NDELAY;
  int get O_NOCTTY;
  int get O_NOFOLLOW;
  int get O_NONBLOCK;
  int get O_RDONLY;
  int get O_RDWR;
  int get O_RSYNC;
  int get O_SYNC;
  int get O_TRUNC;
  int get O_WRONLY;
  int get PDP_ENDIAN;
  int get POSIX_FADV_DONTNEED;
  int get POSIX_FADV_NOREUSE;
  int get POSIX_FADV_NORMAL;
  int get POSIX_FADV_RANDOM;
  int get POSIX_FADV_SEQUENTIAL;
  int get POSIX_FADV_WILLNEED;
  int get POSIX_MADV_DONTNEED;
  int get POSIX_MADV_NORMAL;
  int get POSIX_MADV_RANDOM;
  int get POSIX_MADV_SEQUENTIAL;
  int get POSIX_MADV_WILLNEED;
  int get PROT_EXEC;
  int get PROT_GROWSDOWN;
  int get PROT_GROWSUP;
  int get PROT_NONE;
  int get PROT_READ;
  int get PROT_WRITE;
  int get RAND_MAX;
  int get R_OK;
  int get SEEK_CUR;
  int get SEEK_END;
  int get SEEK_SET;
  int get SI_LOAD_SHIFT;
  int get STAT_VER;
  int get STDERR_FILENO;
  int get STDIN_FILENO;
  int get STDOUT_FILENO;
  int get SYS_NMLN;
  int get S_BLKSIZE;
  int get S_IEXEC;
  int get S_IFBLK;
  int get S_IFCHR;
  int get S_IFDIR;
  int get S_IFIFO;
  int get S_IFLNK;
  int get S_IFMT;
  int get S_IFREG;
  int get S_IFSOCK;
  int get S_IREAD;
  int get S_IRGRP;
  int get S_IROTH;
  int get S_IRUSR;
  int get S_IRWXG;
  int get S_IRWXO;
  int get S_IRWXU;
  int get S_ISGID;
  int get S_ISUID;
  int get S_ISVTX;
  int get S_IWGRP;
  int get S_IWOTH;
  int get S_IWRITE;
  int get S_IWUSR;
  int get S_IXGRP;
  int get S_IXOTH;
  int get S_IXUSR;
  int get UTIME_NOW;
  int get UTIME_OMIT;
  int get UTSNAME_DOMAIN_LENGTH;
  int get UTSNAME_LENGTH;
  int get UTSNAME_MACHINE_LENGTH;
  int get UTSNAME_NODENAME_LENGTH;
  int get UTSNAME_RELEASE_LENGTH;
  int get UTSNAME_SYSNAME_LENGTH;
  int get UTSNAME_VERSION_LENGTH;
  int get WCONTINUED;
  int get WEXITED;
  int get WNOHANG;
  int get WNOWAIT;
  int get WSTOPPED;
  int get WUNTRACED;
  int get W_OK;
  int get X_OK;
  int get ACCESSX_MAX_DESCRIPTORS;
  int get ACCESSX_MAX_TABLESIZE;
  int get AT_FDONLY;
  int get AT_REALDEV;
  int get AT_SYMLINK_NOFOLLOW_ANY;
  int get BUS_ADRALN;
  int get BUS_ADRERR;
  int get BUS_NOOP;
  int get BUS_OBJERR;
  int get CLD_CONTINUED;
  int get CLD_DUMPED;
  int get CLD_EXITED;
  int get CLD_KILLED;
  int get CLD_NOOP;
  int get CLD_STOPPED;
  int get CLD_TRAPPED;
  int get CPF_IGNORE_MODE;
  int get CPF_MASK;
  int get CPF_OVERWRITE;
  int get CPUMON_MAKE_FATAL;
  int get EAUTH;
  int get EBADARCH;
  int get EBADEXEC;
  int get EBADMACHO;
  int get EBADRPC;
  int get EDEVERR;
  int get EFTYPE;
  int get EF_IS_PURGEABLE;
  int get EF_IS_SPARSE;
  int get EF_IS_SYNC_ROOT;
  int get EF_IS_SYNTHETIC;
  int get EF_MAY_SHARE_BLOCKS;
  int get EF_NO_XATTRS;
  int get ELAST;
  int get ENEEDAUTH;
  int get ENOATTR;
  int get ENOPOLICY;
  int get EPROCLIM;
  int get EPROCUNAVAIL;
  int get EPROGMISMATCH;
  int get EPROGUNAVAIL;
  int get EPWROFF;
  int get EQFULL;
  int get ERPCMISMATCH;
  int get ESHLIBVERS;
  int get FCNTL_FS_SPECIFIC_BASE;
  int get FFDSYNC;
  int get FILESEC_GUID;
  int get FOOTPRINT_INTERVAL_RESET;
  int get FPE_FLTDIV;
  int get FPE_FLTINV;
  int get FPE_FLTOVF;
  int get FPE_FLTRES;
  int get FPE_FLTSUB;
  int get FPE_FLTUND;
  int get FPE_INTDIV;
  int get FPE_INTOVF;
  int get FPE_NOOP;
  int get FREAD;
  int get FWRITE;
  int get F_ADDFILESIGS;
  int get F_ADDFILESIGS_FOR_DYLD_SIM;
  int get F_ADDFILESIGS_INFO;
  int get F_ADDFILESIGS_RETURN;
  int get F_ADDFILESUPPL;
  int get F_ADDSIGS;
  int get F_ALLOCATEALL;
  int get F_ALLOCATECONTIG;
  int get F_BARRIERFSYNC;
  int get F_CHECK_LV;
  int get F_CHKCLEAN;
  int get F_FINDSIGS;
  int get F_FLUSH_DATA;
  int get F_FREEZE_FS;
  int get F_FSRESERVED;
  int get F_FULLFSYNC;
  int get F_GETCODEDIR;
  int get F_GETLKPID;
  int get F_GETNOSIGPIPE;
  int get F_GETPATH;
  int get F_GETPATH_MTMINFO;
  int get F_GETPATH_NOFIRMLINK;
  int get F_GETPROTECTIONCLASS;
  int get F_GETPROTECTIONLEVEL;
  int get F_GETSIGSINFO;
  int get F_GLOBAL_NOCACHE;
  int get F_LOG2PHYS;
  int get F_LOG2PHYS_EXT;
  int get F_NOCACHE;
  int get F_NODIRECT;
  int get F_PATHPKG_CHECK;
  int get F_PEOFPOSMODE;
  int get F_PREALLOCATE;
  int get F_PUNCHHOLE;
  int get F_RDADVISE;
  int get F_RDAHEAD;
  int get F_SETBACKINGSTORE;
  int get F_SETLKWTIMEOUT;
  int get F_SETNOSIGPIPE;
  int get F_SETPROTECTIONCLASS;
  int get F_SETSIZE;
  int get F_SINGLE_WRITER;
  int get F_SPECULATIVE_READ;
  int get F_THAW_FS;
  int get F_TRANSCODEKEY;
  int get F_TRIM_ACTIVE_FILE;
  int get F_VOLPOSMODE;
  int get GETSIGSINFO_PLATFORM_BINARY;
  int get ILL_BADSTK;
  int get ILL_COPROC;
  int get ILL_ILLADR;
  int get ILL_ILLOPC;
  int get ILL_ILLOPN;
  int get ILL_ILLTRP;
  int get ILL_NOOP;
  int get ILL_PRVOPC;
  int get ILL_PRVREG;
  int get INT16_MAX;
  int get INT16_MIN;
  int get INT32_MAX;
  int get INT32_MIN;
  int get INT64_MAX;
  int get INT64_MIN;
  int get INT8_MAX;
  int get INT8_MIN;
  int get INTMAX_MAX;
  int get INTMAX_MIN;
  int get INTPTR_MAX;
  int get INTPTR_MIN;
  int get INT_FAST16_MAX;
  int get INT_FAST16_MIN;
  int get INT_FAST32_MAX;
  int get INT_FAST32_MIN;
  int get INT_FAST64_MAX;
  int get INT_FAST64_MIN;
  int get INT_FAST8_MAX;
  int get INT_FAST8_MIN;
  int get INT_LEAST16_MAX;
  int get INT_LEAST16_MIN;
  int get INT_LEAST32_MAX;
  int get INT_LEAST32_MIN;
  int get INT_LEAST64_MAX;
  int get INT_LEAST64_MIN;
  int get INT_LEAST8_MAX;
  int get INT_LEAST8_MIN;
  int get IOPOL_APPLICATION;
  int get IOPOL_ATIME_UPDATES_DEFAULT;
  int get IOPOL_ATIME_UPDATES_OFF;
  int get IOPOL_DEFAULT;
  int get IOPOL_IMPORTANT;
  int get IOPOL_MATERIALIZE_DATALESS_FILES_DEFAULT;
  int get IOPOL_MATERIALIZE_DATALESS_FILES_OFF;
  int get IOPOL_MATERIALIZE_DATALESS_FILES_ON;
  int get IOPOL_NORMAL;
  int get IOPOL_PASSIVE;
  int get IOPOL_SCOPE_DARWIN_BG;
  int get IOPOL_SCOPE_PROCESS;
  int get IOPOL_SCOPE_THREAD;
  int get IOPOL_STANDARD;
  int get IOPOL_THROTTLE;
  int get IOPOL_TYPE_DISK;
  int get IOPOL_TYPE_VFS_ALLOW_LOW_SPACE_WRITES;
  int get IOPOL_TYPE_VFS_ATIME_UPDATES;
  int get IOPOL_TYPE_VFS_IGNORE_CONTENT_PROTECTION;
  int get IOPOL_TYPE_VFS_IGNORE_PERMISSIONS;
  int get IOPOL_TYPE_VFS_MATERIALIZE_DATALESS_FILES;
  int get IOPOL_TYPE_VFS_SKIP_MTIME_UPDATE;
  int get IOPOL_TYPE_VFS_STATFS_NO_DATA_VOLUME;
  int get IOPOL_TYPE_VFS_TRIGGER_RESOLVE;
  int get IOPOL_UTILITY;
  int get IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_OFF;
  int get IOPOL_VFS_ALLOW_LOW_SPACE_WRITES_ON;
  int get IOPOL_VFS_CONTENT_PROTECTION_DEFAULT;
  int get IOPOL_VFS_CONTENT_PROTECTION_IGNORE;
  int get IOPOL_VFS_IGNORE_PERMISSIONS_OFF;
  int get IOPOL_VFS_IGNORE_PERMISSIONS_ON;
  int get IOPOL_VFS_SKIP_MTIME_UPDATE_OFF;
  int get IOPOL_VFS_SKIP_MTIME_UPDATE_ON;
  int get IOPOL_VFS_STATFS_FORCE_NO_DATA_VOLUME;
  int get IOPOL_VFS_STATFS_NO_DATA_VOLUME_DEFAULT;
  int get IOPOL_VFS_TRIGGER_RESOLVE_DEFAULT;
  int get IOPOL_VFS_TRIGGER_RESOLVE_OFF;
  int get MAC_OS_VERSION_11_0;
  int get MAC_OS_VERSION_12_0;
  int get MAC_OS_X_VERSION_10_0;
  int get MAC_OS_X_VERSION_10_1;
  int get MAC_OS_X_VERSION_10_10;
  int get MAC_OS_X_VERSION_10_10_2;
  int get MAC_OS_X_VERSION_10_10_3;
  int get MAC_OS_X_VERSION_10_11;
  int get MAC_OS_X_VERSION_10_11_2;
  int get MAC_OS_X_VERSION_10_11_3;
  int get MAC_OS_X_VERSION_10_11_4;
  int get MAC_OS_X_VERSION_10_12;
  int get MAC_OS_X_VERSION_10_12_1;
  int get MAC_OS_X_VERSION_10_12_2;
  int get MAC_OS_X_VERSION_10_12_4;
  int get MAC_OS_X_VERSION_10_13;
  int get MAC_OS_X_VERSION_10_13_1;
  int get MAC_OS_X_VERSION_10_13_2;
  int get MAC_OS_X_VERSION_10_13_4;
  int get MAC_OS_X_VERSION_10_14;
  int get MAC_OS_X_VERSION_10_14_1;
  int get MAC_OS_X_VERSION_10_14_4;
  int get MAC_OS_X_VERSION_10_14_6;
  int get MAC_OS_X_VERSION_10_15;
  int get MAC_OS_X_VERSION_10_15_1;
  int get MAC_OS_X_VERSION_10_16;
  int get MAC_OS_X_VERSION_10_2;
  int get MAC_OS_X_VERSION_10_3;
  int get MAC_OS_X_VERSION_10_4;
  int get MAC_OS_X_VERSION_10_5;
  int get MAC_OS_X_VERSION_10_6;
  int get MAC_OS_X_VERSION_10_7;
  int get MAC_OS_X_VERSION_10_8;
  int get MAC_OS_X_VERSION_10_9;
  int get MADV_CAN_REUSE;
  int get MADV_FREE_REUSABLE;
  int get MADV_FREE_REUSE;
  int get MADV_PAGEOUT;
  int get MADV_ZERO_WIRED_PAGES;
  int get MAP_COPY;
  int get MAP_HASSEMAPHORE;
  int get MAP_JIT;
  int get MAP_NOCACHE;
  int get MAP_NOEXTEND;
  int get MAP_RENAME;
  int get MAP_RESERVED0080;
  int get MAP_RESILIENT_CODESIGN;
  int get MAP_RESILIENT_MEDIA;
  int get MAP_TRANSLATED_ALLOW_EXECUTE;
  int get MAP_UNIX03;
  int get MINCORE_ANONYMOUS;
  int get MINCORE_COPIED;
  int get MINCORE_INCORE;
  int get MINCORE_MODIFIED;
  int get MINCORE_MODIFIED_OTHER;
  int get MINCORE_PAGED_OUT;
  int get MINCORE_REFERENCED;
  int get MINCORE_REFERENCED_OTHER;
  int get MINSIGSTKSZ;
  int get MS_DEACTIVATE;
  int get MS_KILLPAGES;
  int get NSIG;
  int get O_ALERT;
  int get O_DP_GETRAWENCRYPTED;
  int get O_DP_GETRAWUNENCRYPTED;
  int get O_EVTONLY;
  int get O_EXLOCK;
  int get O_NOFOLLOW_ANY;
  int get O_POPUP;
  int get O_SHLOCK;
  int get O_SYMLINK;
  int get POLL_ERR;
  int get POLL_HUP;
  int get POLL_IN;
  int get POLL_MSG;
  int get POLL_OUT;
  int get POLL_PRI;
  int get PRIO_DARWIN_BG;
  int get PRIO_DARWIN_NONUI;
  int get PRIO_DARWIN_PROCESS;
  int get PRIO_DARWIN_THREAD;
  int get PRIO_MAX;
  int get PRIO_MIN;
  int get PRIO_PGRP;
  int get PRIO_PROCESS;
  int get PRIO_USER;
  int get PTRDIFF_MAX;
  int get PTRDIFF_MIN;
  int get RLIMIT_AS;
  int get RLIMIT_CORE;
  int get RLIMIT_CPU;
  int get RLIMIT_CPU_USAGE_MONITOR;
  int get RLIMIT_DATA;
  int get RLIMIT_FOOTPRINT_INTERVAL;
  int get RLIMIT_FSIZE;
  int get RLIMIT_MEMLOCK;
  int get RLIMIT_NOFILE;
  int get RLIMIT_NPROC;
  int get RLIMIT_RSS;
  int get RLIMIT_STACK;
  int get RLIMIT_THREAD_CPULIMITS;
  int get RLIMIT_WAKEUPS_MONITOR;
  int get RLIM_INFINITY;
  int get RLIM_NLIMITS;
  int get RLIM_SAVED_CUR;
  int get RLIM_SAVED_MAX;
  int get RSIZE_MAX;
  int get RUSAGE_CHILDREN;
  int get RUSAGE_INFO_CURRENT;
  int get RUSAGE_INFO_V0;
  int get RUSAGE_INFO_V1;
  int get RUSAGE_INFO_V2;
  int get RUSAGE_INFO_V3;
  int get RUSAGE_INFO_V4;
  int get RUSAGE_INFO_V5;
  int get RUSAGE_SELF;
  int get RU_PROC_RUNS_RESLIDE;
  int get SA_64REGSET;
  int get SA_NOCLDSTOP;
  int get SA_NOCLDWAIT;
  int get SA_NODEFER;
  int get SA_ONSTACK;
  int get SA_RESETHAND;
  int get SA_RESTART;
  int get SA_SIGINFO;
  int get SA_USERSPACE_MASK;
  int get SA_USERTRAMP;
  int get SEEK_DATA;
  int get SEEK_HOLE;
  int get SEGV_ACCERR;
  int get SEGV_MAPERR;
  int get SEGV_NOOP;
  int get SF_APPEND;
  int get SF_ARCHIVED;
  int get SF_DATALESS;
  int get SF_FIRMLINK;
  int get SF_IMMUTABLE;
  int get SF_NOUNLINK;
  int get SF_RESTRICTED;
  int get SF_SETTABLE;
  int get SF_SUPPORTED;
  int get SF_SYNTHETIC;
  int get SIGABRT;
  int get SIGALRM;
  int get SIGBUS;
  int get SIGCHLD;
  int get SIGCONT;
  int get SIGEMT;
  int get SIGEV_NONE;
  int get SIGEV_SIGNAL;
  int get SIGEV_THREAD;
  int get SIGFPE;
  int get SIGHUP;
  int get SIGILL;
  int get SIGINFO;
  int get SIGINT;
  int get SIGIO;
  int get SIGIOT;
  int get SIGKILL;
  int get SIGPIPE;
  int get SIGPROF;
  int get SIGQUIT;
  int get SIGSEGV;
  int get SIGSTKSZ;
  int get SIGSTOP;
  int get SIGSYS;
  int get SIGTERM;
  int get SIGTRAP;
  int get SIGTSTP;
  int get SIGTTIN;
  int get SIGTTOU;
  int get SIGURG;
  int get SIGUSR1;
  int get SIGUSR2;
  int get SIGVTALRM;
  int get SIGWINCH;
  int get SIGXCPU;
  int get SIGXFSZ;
  int get SIG_ATOMIC_MAX;
  int get SIG_ATOMIC_MIN;
  int get SIG_BLOCK;
  int get SIG_SETMASK;
  int get SIG_UNBLOCK;
  int get SIZE_MAX;
  int get SI_ASYNCIO;
  int get SI_MESGQ;
  int get SI_QUEUE;
  int get SI_TIMER;
  int get SI_USER;
  int get SS_DISABLE;
  int get SS_ONSTACK;
  int get SV_INTERRUPT;
  int get SV_NOCLDSTOP;
  int get SV_NODEFER;
  int get SV_ONSTACK;
  int get SV_RESETHAND;
  int get SV_SIGINFO;
  int get SYNC_VOLUME_FULLSYNC;
  int get SYNC_VOLUME_WAIT;
  int get SYS_NAMELEN;
  int get S_IFWHT;
  int get S_ISTXT;
  int get TRAP_BRKPT;
  int get TRAP_TRACE;
  int get UF_APPEND;
  int get UF_COMPRESSED;
  int get UF_DATAVAULT;
  int get UF_HIDDEN;
  int get UF_IMMUTABLE;
  int get UF_NODUMP;
  int get UF_OPAQUE;
  int get UF_SETTABLE;
  int get UF_TRACKED;
  int get UINT16_MAX;
  int get UINT32_MAX;
  int get UINT64_MAX;
  int get UINT8_MAX;
  int get UINTMAX_MAX;
  int get UINTPTR_MAX;
  int get UINT_FAST16_MAX;
  int get UINT_FAST32_MAX;
  int get UINT_FAST64_MAX;
  int get UINT_FAST8_MAX;
  int get UINT_LEAST16_MAX;
  int get UINT_LEAST32_MAX;
  int get UINT_LEAST64_MAX;
  int get UINT_LEAST8_MAX;
  int get USER_ADDR_NULL;
  int get USER_FSIGNATURES_CDHASH_LEN;
  int get WAIT_ANY;
  int get WAIT_MYPGRP;
  int get WAKEMON_DISABLE;
  int get WAKEMON_ENABLE;
  int get WAKEMON_GET_PARAMS;
  int get WAKEMON_MAKE_FATAL;
  int get WAKEMON_SET_DEFAULTS;
  int get WCHAR_MAX;
  int get WCHAR_MIN;
  int get WCOREFLAG;
  int get WINT_MAX;
  int get WINT_MIN;
}
